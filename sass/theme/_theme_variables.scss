// Use this file to overwrite the basic Bootstrap variables and add your own variables
// To overwrite a Bootstrap variable you donÂ´t have to touch the Bootstrap folder.
// Just copy a variable from /sass/bootstrap/_variables.scss, paste it here and edit the value.
// As example you find one of the most important Bootstrap variable below: $brand-primary.
// Thats the ugly Bootstrap blue used for all the links, primary buttons etc.
// Just add your color code here, compile the theme.scss file to change this color everywhere

$font-family-sans-serif:Arial, sans-serif;
$brand-primary:         #7852B2; //#ff6d5a


// Basics of a navbar
$navbar-height:                    60px;
$navbar-margin-bottom:             0px;
$navbar-border-radius:             0px;


// Colors
$gray-lighter:          rgba(224, 225, 221, 1);

$brand-primary:         rgba(119, 141, 169, 1);
$brand-success:         rgba(103, 234, 208, 1);
$brand-info:            rgba(245, 217, 137, 1);
$brand-warning:         rgba(245, 217, 137, 1);
$brand-danger:          rgba(219, 84, 97, 1);
$brand-inverse:         darken($gray-lighter, 30%);

$brand-primary-darker:  rgba(65, 90, 119, 1); //rgba(65, 90, 119, 1);
$brand-primary-darkest: rgba(55, 76, 100, 1); //rgba(65, 90, 119, 1);
$font-color:            rgba(41, 69, 86, 1); //rgba(65, 90, 119, 1);
$font-color-dark:       rgba(24, 39, 51, 1); //rgba(65, 90, 119, 1);

// Body

$body-color:    $font-color;


// Links

$link-hover-decoration: none;

// Fonts

@font-face {
    font-family: 'noto_sansregular';
    src: url('../fonts/NotoSans-Regular-webfont.eot');
    src: url('../fonts/NotoSans-Regular-webfont.eot?#iefix') format('embedded-opentype'),
         url('../fonts/NotoSans-Regular-webfont.woff') format('woff'),
         url('../fonts/NotoSans-Regular-webfont.ttf') format('truetype'),
         url('../fonts/NotoSans-Regular-webfont.svg#noto_sansregular') format('svg');
    font-weight: normal;
    font-style: normal;

}

@font-face {
    font-family: 'noto_sansbold';
    src: url('../fonts/NotoSans-Bold-webfont.eot');
    src: url('../fonts/NotoSans-Bold-webfont.eot?#iefix') format('embedded-opentype'),
         url('../fonts/NotoSans-Bold-webfont.woff') format('woff'),
         url('../fonts/NotoSans-Bold-webfont.ttf') format('truetype'),
         url('../fonts/NotoSans-Bold-webfont.svg#noto_sansbold') format('svg');
    font-weight: normal;
    font-style: normal;

}

@font-face {
    font-family: 'noto_sansitalic';
    src: url('../fonts/NotoSans-Italic-webfont.eot');
    src: url('../fonts/NotoSans-Italic-webfont.eot?#iefix') format('embedded-opentype'),
         url('../fonts/NotoSans-Italic-webfont.woff') format('woff'),
         url('../fonts/NotoSans-Italic-webfont.ttf') format('truetype'),
         url('../fonts/NotoSans-Italic-webfont.svg#noto_sansitalic') format('svg');
    font-weight: normal;
    font-style: normal;

}

@font-face {
    font-family: 'cgothicbold';
    src: url('../fonts/cgothic_bold_mac-webfont.eot');
    src: url('../fonts/cgothic_bold_mac-webfont.eot?#iefix') format('embedded-opentype'),
         url('../fonts/cgothic_bold_mac-webfont.woff2') format('woff2'),
         url('../fonts/cgothic_bold_mac-webfont.woff') format('woff'),
         url('../fonts/cgothic_bold_mac-webfont.ttf') format('truetype'),
         url('../fonts/cgothic_bold_mac-webfont.svg#cgothicbold') format('svg');
    font-weight: normal;
    font-style: normal;

}

@font-face {
  font-family: 'icomoon';
  src:  url('../fonts/icomoon.eot?exw595');
  src:  url('../fonts/icomoon.eot?exw595#iefix') format('embedded-opentype'),
    url('../fonts/icomoon.ttf?exw595') format('truetype'),
    url('../fonts/icomoon.woff?exw595') format('woff'),
    url('../fonts/icomoon.svg?exw595#icomoon') format('svg');
  font-weight: normal;
  font-style: normal;
}

[class^="icomoon-"], [class*=" icomoon-"] {
  /* use !important to prevent issues with browser extensions that change fonts */
  font-family: 'icomoon' !important;
  speak: none;
  font-style: normal;
  font-weight: normal;
  font-variant: normal;
  text-transform: none;
  line-height: 1;

  /* Better Font Rendering =========== */
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
}

.icomoon-menu:before {
  content: "\e900";
}

$font-size-9:   0.5625em; //9/16rem;
$font-size-12:  0.7500em; //12/16rem;
$font-size-16:  1.0000em; //16/16rem;
$font-size-21:  1.3125em; //21/16rem;
$font-size-28:  1.7500em; //28/16rem;
$font-size-37:  2.3125em; //37/16rem;
$font-size-50:  3.1250em; //50/16rem;
$font-size-67:  4.1875em; //67/16rem;

$display1-size: 3rem;   // default: 6rem;
$display2-size: 2.5rem; // default: 5.5rem;
$display3-size: 2.25em; // default: 4.5rem;
$display4-size: 1.75em; // default: 3.5rem;

$font-family-sans-serif: 'noto_sansregular', -apple-system, system-ui, BlinkMacSystemFont, "Segoe UI", Roboto, "Helvetica Neue", Arial, sans-serif;
$font-family-sans-serif-bold: 'noto_sansbold', -apple-system, system-ui, BlinkMacSystemFont, "Segoe UI", Roboto, "Helvetica Neue", Arial, sans-serif;
$font-family-sans-serif-italic: 'noto_sansitalic', -apple-system, system-ui, BlinkMacSystemFont, "Segoe UI", Roboto, "Helvetica Neue", Arial, sans-serif;
$font-family-display: 'cgothicbold', -apple-system, system-ui, BlinkMacSystemFont, "Segoe UI", Roboto, "Helvetica Neue", Arial, sans-serif;

b, strong {
    font-family: $font-family-sans-serif-bold;
}

$headings-color: $font-color;
$hr-border-color: $font-color; // rgba($black,.1) !default;

// Buttons

$btn-padding-x:                  1.5rem;
$btn-padding-y:                  .75rem;
$btn-line-height:                1.25;

// Jumbotron

$jumbotron-padding:              1.5rem;

// Spacing

$spacer:   1.6rem;
$border-width: 2px;

// Right menu

$menu-icon-size: 3.5em;
$menu-width: 85%;
$menu-width-md: 22rem;
$menu-padding: 4em;

// Speed

$duration-fast:   200ms;
$duration-normal: 400ms;
$duration-slow:   600ms;

// Mixins

@mixin transform($transforms) {
	-webkit-transform: $transforms;
	-moz-transform: $transforms;
	-ms-transform: $transforms;
	transform: $transforms;
}

@mixin translate ($x, $y) {
   @include transform(translate($x, $y));
}

@mixin transition($transition...) {
    -moz-transition:    $transition;
    -o-transition:      $transition;
    -webkit-transition: $transition;
    transition:         $transition;
}
@mixin transition-property($property...) {
    -moz-transition-property:    $property;
    -o-transition-property:      $property;
    -webkit-transition-property: $property;
    transition-property:         $property;
}
@mixin transition-duration($duration...) {
    -moz-transition-property:    $duration;
    -o-transition-property:      $duration;
    -webkit-transition-property: $duration;
    transition-property:         $duration;
}
@mixin transition-timing-function($timing...) {
    -moz-transition-timing-function:    $timing;
    -o-transition-timing-function:      $timing;
    -webkit-transition-timing-function: $timing;
    transition-timing-function:         $timing;
}
@mixin transition-delay($delay...) {
    -moz-transition-delay:    $delay;
    -o-transition-delay:      $delay;
    -webkit-transition-delay: $delay;
    transition-delay:         $delay;
}
